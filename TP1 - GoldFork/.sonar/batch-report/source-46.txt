/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfaceDialogsRelatorios;

import BancoDeDados.BancoDeDados;
import ClasseProdutos.Produto;
import ClassesLojas.Loja;
import ClassesNotas.NotaDeCompra;
import ClassesNotas.NotaDeVenda;
import InterfaceVendas.Pagamento;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Eymar Lima
 */
public class TodasAsNotasDeVenda extends javax.swing.JDialog {
    private ArrayList<Loja> lojas;
    private ArrayList<NotaDeVenda> notas;
    /**
     * Creates new form TodasAsNotasDeVenda
     */
    public TodasAsNotasDeVenda(java.awt.Frame parent, boolean modal, ArrayList<Loja> lojas) {
        super(parent, modal);
        initComponents();
        this.lojas = lojas;
        this.preencherTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        notasDeVendaTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        itensNotaTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        pagamentosTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Notas de Venda");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Notas de Venda:");

        notasDeVendaTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        notasDeVendaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número da Nota", "Data", "Valor Total", "Vendedor", "Loja"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(notasDeVendaTable);

        itensNotaTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itensNotaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Quantidade", "Valor Unitário", "Valor Total do Item"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(itensNotaTable);

        pagamentosTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pagamentosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo de Pagamento", "Valor", "Crédito/Débito", "Bandeira", "Últimos 4 Dígitos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(pagamentosTable);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Itens da Nota:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Pagamentos daNota:");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/visible-opened-eye-interface-option (1).png"))); // NOI18N
        jButton1.setText("Visualizar Itens e Pagamentos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1052, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int linha = notasDeVendaTable.getSelectedRow();
        if(linha == -1) return;
        
        //itens da nota;
        ArrayList<Produto> itensNota = BancoDeDados.itensDeUmaNotaVenda(notas.get(linha).getId_nota_venda());
        DefaultTableModel dtm = (DefaultTableModel) itensNotaTable.getModel();
        dtm.setRowCount(0);
        String []line = new String[4];
        
        if(!itensNota.isEmpty()){
            for(Produto atual: itensNota){
                line[0] = atual.getNome();
                line[1] = String.valueOf(atual.getQuantidade());
                line[2] = String.format("%.2f", atual.getValor());
                line[3] = String.format("%.2f", atual.getValor()*atual.getQuantidade());
                dtm.addRow(line);
            }
        }
        
        //tipos de pagamento;
        ArrayList<Pagamento> pagamentos = BancoDeDados.pagamentosDeUmaNotaVenda(notas.get(linha).getId_nota_venda());
        dtm = (DefaultTableModel) pagamentosTable.getModel();
        dtm.setRowCount(0);
        line = new String[5];
        if(!pagamentos.isEmpty()){
            for(Pagamento atual : pagamentos){
                if(!atual.isCartao()){
                    line[0] = "DINHEIRO";
                    line[1] = String.format("%.2f",atual.getValor());
                    line[2] = "-";
                    line[3] = "-";
                    line[4] = "-";
                    dtm.addRow(line);
                }
                else{
                    line[0] = "CARTÃO";
                    line[1] = String.format("%.2f",atual.getValor());
                    line[2] = atual.getTipo();
                    line[3] = atual.getBandeira();
                    line[4] = String.valueOf(atual.getUltimos4Digitos());
                    dtm.addRow(line);
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public void preencherTabela(){
        DefaultTableModel dtm = (DefaultTableModel) notasDeVendaTable.getModel();
        String []linha = new String[5];
        
        notas = new ArrayList<NotaDeVenda>();
        ArrayList<NotaDeVenda> temporario = new ArrayList<NotaDeVenda>();
        for(Loja lojaAtual:lojas){
            temporario = BancoDeDados.notasDeVenda(lojaAtual.getId_lanchonete());
            if(!temporario.isEmpty()){
                for(NotaDeVenda atual:temporario){
                    linha[0] = String.valueOf(atual.getId_nota_venda());
                    linha[1] = atual.getData();
                    linha[2] = BancoDeDados.nomeDeUmCaixa(atual.getCod_caixa());
                    linha[3] = String.valueOf(atual.getValor_total());
                    linha[4] = lojaAtual.getNome();
                    notas.add(atual);
                    dtm.addRow(linha);
                }
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable itensNotaTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable notasDeVendaTable;
    private javax.swing.JTable pagamentosTable;
    // End of variables declaration//GEN-END:variables
}
