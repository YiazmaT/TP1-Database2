/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfaceDialogsRelatorios;

import BancoDeDados.BancoDeDados;
import ClassesFuncionarios.Caixa;
import ClassesFuncionarios.Cozinheiro;
import ClassesFuncionarios.Faxineiro;
import ClassesFuncionarios.FuncionarioTabela;
import ClassesFuncionarios.Gerente;
import ClassesLojas.Loja;
import InterfaceDialogsAlteracaoDeDados.ModificarUsuario;
import InterfaceMain.Main;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Eymar Lima
 */
public class RelatorioFuncionarios extends javax.swing.JDialog {
    private ArrayList<Loja> lojas;
    private ArrayList<FuncionarioTabela> func;
    private Main pai;
    /**
     * Creates new form RelatorioFuncionarios
     */
    public RelatorioFuncionarios(java.awt.Frame parent, boolean modal, ArrayList<Loja> lojas, Main pai) {
        super(parent, modal);
        initComponents();
        this.lojas = lojas;
        this.pai = pai;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        funcionariosTable = new javax.swing.JTable();
        gerentesBox = new javax.swing.JCheckBox();
        caixasBox = new javax.swing.JCheckBox();
        auxiliarBox = new javax.swing.JCheckBox();
        cozinheirosBox = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        selecionaTodos = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Relatório de Funcionários");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Funcionários Cadastrados:");

        funcionariosTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        funcionariosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Telefone", "CPF", "Lanchonete", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(funcionariosTable);

        gerentesBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        gerentesBox.setText("Gerentes");
        gerentesBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerentesBoxActionPerformed(evt);
            }
        });

        caixasBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        caixasBox.setText("Caixas");

        auxiliarBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        auxiliarBox.setText("Auxiliares de Limpeza");

        cozinheirosBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cozinheirosBox.setText("Cozinheiros");
        cozinheirosBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cozinheirosBoxActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/power (1).png"))); // NOI18N
        jButton1.setText("Gerar Relatório");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Selecione os tipos de funcionários desejados:");

        selecionaTodos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        selecionaTodos.setText("Selecionar Todos");
        selecionaTodos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selecionaTodosMouseClicked(evt);
            }
        });
        selecionaTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecionaTodosActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/shuffle (1).png"))); // NOI18N
        jButton2.setText("Alterar Informações do Funcionário");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/rubbish-bin (1).png"))); // NOI18N
        jButton3.setText("Desligar Funcionário");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1180, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(gerentesBox)
                                    .addComponent(caixasBox))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cozinheirosBox)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(auxiliarBox)
                                        .addGap(18, 18, 18)
                                        .addComponent(selecionaTodos))))
                            .addComponent(jLabel1)
                            .addComponent(jButton1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gerentesBox)
                    .addComponent(auxiliarBox)
                    .addComponent(selecionaTodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixasBox)
                    .addComponent(cozinheirosBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gerentesBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerentesBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gerentesBoxActionPerformed

    private void cozinheirosBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cozinheirosBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cozinheirosBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.preecherTabela();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void selecionaTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionaTodosActionPerformed
        this.verificaSelecionarTodos();
    }//GEN-LAST:event_selecionaTodosActionPerformed

    private void selecionaTodosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selecionaTodosMouseClicked
        this.verificaSelecionarTodos();
    }//GEN-LAST:event_selecionaTodosMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int linha = funcionariosTable.getSelectedRow();
        if(linha == -1) return;
        
        ModificarUsuario m = new ModificarUsuario(this.pai, true, this.func.get(linha));
        m.setLocationRelativeTo(this.pai);
        m.setVisible(true);
        
        this.preecherTabela();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int linha = funcionariosTable.getSelectedRow();
        if(linha == -1) return;
        
        int confirm=0;
        confirm = JOptionPane.showConfirmDialog(null, "Deseja Realmente Apagar Esse Funcionário:\n"+func.get(linha).getNome()+"?\n"+"Tipo: "+func.get(linha).getTipo().toUpperCase(), "Apagar Funcionário", JOptionPane.YES_NO_OPTION);
        if(confirm == 0){
            if(func.get(linha).getTipo().equals("gerente")){
                BancoDeDados.desligarFuncionario(func.get(linha).getId(), 0);
            }
            if(func.get(linha).getTipo().equals("caixa")){
                BancoDeDados.desligarFuncionario(func.get(linha).getId(), 1);
            }
            if(func.get(linha).getTipo().equals("auxiliar")){
                BancoDeDados.desligarFuncionario(func.get(linha).getId(), 2);
            }
            if(func.get(linha).getTipo().equals("cozinheiro")){
                BancoDeDados.desligarFuncionario(func.get(linha).getId(), 3);
            }
        }
        else{return;}
        
        this.preecherTabela();
    }//GEN-LAST:event_jButton3ActionPerformed

    public void listarGerentes(ArrayList<Loja> lojas){
        String nomeloja;
        ArrayList<Gerente> gerentes;
        String [] linha = new String[5];
        DefaultTableModel dtm = (DefaultTableModel) funcionariosTable.getModel();
        for(Loja atual : lojas){
            nomeloja = BancoDeDados.recuperarNomeLoja(atual.getId_lanchonete());
            gerentes = BancoDeDados.gerentesDeUmaLoja(atual.getId_lanchonete());
            if(!gerentes.isEmpty()){
                for(Gerente g : gerentes){
                    if(g.isAtivo()){
                        linha[0] = g.getNome();
                        linha[1] = g.getTelefone();
                        linha[2] = g.getCpf();
                        linha[3] = nomeloja;
                        linha[4] = "Gerente";
                        dtm.addRow(linha);
                        this.func.add(new FuncionarioTabela(g.getId_funcionario(), "gerente", g.getNome()));
                    }
                }
            }
        }
    }
    
    public void listarCaixas(ArrayList<Loja> lojas){
        String nomeloja;
        ArrayList<Caixa> caixas;
        String [] linha = new String[5];
        DefaultTableModel dtm = (DefaultTableModel) funcionariosTable.getModel();
        for(Loja atual : lojas){
            nomeloja = BancoDeDados.recuperarNomeLoja(atual.getId_lanchonete());
            caixas = BancoDeDados.caixasDeUmaLoja(atual.getId_lanchonete());
            if(!caixas.isEmpty()){
                for(Caixa c : caixas){
                    if(c.isAtivo()){
                        linha[0] = c.getNome();
                        linha[1] = c.getTelefone();
                        linha[2] = c.getCpf();
                        linha[3] = nomeloja;
                        linha[4] = "Caixa";
                        dtm.addRow(linha);
                        this.func.add(new FuncionarioTabela(c.getId_funcionario(), "caixa", c.getNome()));
                    }
                }
            }
        }
    }
    
    public void listarAuxiliares(ArrayList<Loja> lojas){
        String nomeloja;
        ArrayList<Faxineiro> auxiliares;
        String [] linha = new String[5];
        DefaultTableModel dtm = (DefaultTableModel) funcionariosTable.getModel();
        for(Loja atual : lojas){
            nomeloja = BancoDeDados.recuperarNomeLoja(atual.getId_lanchonete());
            auxiliares = BancoDeDados.faxineirosDeUmaLoja(atual.getId_lanchonete());
            if(!auxiliares.isEmpty()){
                for(Faxineiro f : auxiliares){
                    if(f.isAtivo()){
                        linha[0] = f.getNome();
                        linha[1] = f.getTelefone();
                        linha[2] = f.getCpf();
                        linha[3] = nomeloja;
                        linha[4] = "Auxiliar de Limpeza";
                        dtm.addRow(linha);
                        this.func.add(new FuncionarioTabela(f.getId_funcionario(), "auxiliar", f.getNome()));
                    }
                }
            }
        }
    }
    
    public void listarCozinheiros(ArrayList<Loja> lojas){
        String nomeloja;
        ArrayList<Cozinheiro> cozinheiros;
        String [] linha = new String[5];
        DefaultTableModel dtm = (DefaultTableModel) funcionariosTable.getModel();
        for(Loja atual : lojas){
            nomeloja = BancoDeDados.recuperarNomeLoja(atual.getId_lanchonete());
            cozinheiros = BancoDeDados.cozinheirosDeUmaLoja(atual.getId_lanchonete());
            if(!cozinheiros.isEmpty()){
                for(Cozinheiro c : cozinheiros){
                   if(c.isAtivo()){
                       linha[0] = c.getNome();
                        linha[1] = c.getTelefone();
                        linha[2] = c.getCpf();
                        linha[3] = nomeloja;
                        linha[4] = "Cozinheiro";
                        dtm.addRow(linha);
                        this.func.add(new FuncionarioTabela(c.getId_funcionario(), "cozinheiro", c.getNome()));
                   }     
                }
            }
        }
    }
    
    public void selecionaTodos(boolean b){
        gerentesBox.setSelected(b);
        auxiliarBox.setSelected(b);
        caixasBox.setSelected(b);
        cozinheirosBox.setSelected(b);
    }
    
    public void verificaSelecionarTodos(){
        if(selecionaTodos.isSelected()){
            this.selecionaTodos(true);
        }
        else{
            this.selecionaTodos(false);
        }
    }
    
    public void preecherTabela(){
        DefaultTableModel dtm = (DefaultTableModel) funcionariosTable.getModel();
        dtm.setRowCount(0);
        this.func = new ArrayList<FuncionarioTabela>();
        if(gerentesBox.isSelected()){
            this.listarGerentes(this.lojas);
        }
        if(caixasBox.isSelected()){
            this.listarCaixas(this.lojas);
        }
        if(auxiliarBox.isSelected()){
            this.listarAuxiliares(this.lojas);
        }
        if(cozinheirosBox.isSelected()){
            this.listarCozinheiros(this.lojas);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox auxiliarBox;
    private javax.swing.JCheckBox caixasBox;
    private javax.swing.JCheckBox cozinheirosBox;
    private javax.swing.JTable funcionariosTable;
    private javax.swing.JCheckBox gerentesBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton selecionaTodos;
    // End of variables declaration//GEN-END:variables
}
